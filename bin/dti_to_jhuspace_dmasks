#!/bin/bash

# Move preprocessed images from dmasks to JHU standard 2 mm space.
# Run this from an exam directory containing a dmri_dmasks dir.

# v0.2 (June 2019) by Andrew Davis (addavis@gmail.com)

# Apply masks in std space to remove tiny background signals

# Check for expected files
prep_dir=dmri_dmasks
[[ -d "${prep_dir}" ]] \
  || { echo "Error: prep_dir (${prep_dir}) not found in ${PWD}."; exit 2; }

[[ $(imtest ${prep_dir}/wdt_FA) == 1 ]] \
  || { echo "Error: image not found in ${PWD}: ${prep_dir}/wdt_FA"; exit 2; }

# erikson vs sharcnet
fnirt_config_file=""
if [[ -e "${HOME}"/Documents/Research_Projects/CAN-BIND_DTI/bin/FA_2_JHU_2mm.cnf ]]; then
    fnirt_config_file="${HOME}"/Documents/Research_Projects/CAN-BIND_DTI/bin/FA_2_JHU_2mm.cnf
elif [[ -e "${HOME}"/bin/FA_2_JHU_2mm.cnf ]]; then
    fnirt_config_file="${HOME}"/bin/FA_2_JHU_2mm.cnf
fi
[[ -e "${fnirt_config_file}" ]] \
  || { echo "Error: fnirt config file not found: ${fnirt_config_file}"; exit 2; }

# Make output dir and apply warps as necessary
jhu_dir=${prep_dir}/jhu-space
jhu_reg_dir=${prep_dir}/jhu-space/reg
mkdir -p ${jhu_reg_dir}

# Create warp registration files using FA data
echo "Creating JHU warps..."

jhu_atlas="${FSLDIR}/data/atlases/JHU/JHU-ICBM-FA-2mm"

# old method: erode the mask to get rid of cruft at the edges
if false; then
    $FSLDIR/bin/fslmaths ${prep_dir}/wdt_FA \
                         -kernel box 7.5 -ero \
                         ${jhu_dir}/wdt_FA_ero
    moving_image=wdt_FA_ero

elif true; then
    moving_image=wdt_FA
    # need to add dmasks to the reg commands below

fi


$FSLDIR/bin/flirt -in ${jhu_dir}/${moving_image} \
                  -ref "${jhu_atlas}" \
                  -dof 12 \
                  -interp spline \
                  -omat "${jhu_reg_dir}"/${moving_image}_to_JHU_FA_2mm_linear.xfm \
                  -out "${jhu_reg_dir}"/${moving_image}-jhu_space_linear

$FSLDIR/bin/fnirt --in=${jhu_dir}/${moving_image} \
                  --ref="${jhu_atlas}" \
                  --iout="${jhu_reg_dir}"/${moving_image}-jhu_space_nonlinear \
                  --aff="${jhu_reg_dir}"/${moving_image}_to_JHU_FA_2mm_linear.xfm \
                  --cout="${jhu_reg_dir}"/${moving_image}_to_JHU_FA_2mm_nonlinear_cout_warpfields \
                  --config="${fnirt_config_file}" \
                  --logout="${jhu_reg_dir}"/${moving_image}_to_JHU_FA_2mm_nonlinear.log

$FSLDIR/bin/invwarp -w "${jhu_reg_dir}"/${moving_image}_to_JHU_FA_2mm_nonlinear_cout_warpfields \
                    -o "${jhu_reg_dir}"/JHU_FA_2mm_to_${moving_image}_nonlinear_cout_warpfields \
                    -r ${jhu_dir}/${moving_image}

$FSLDIR/bin/applywarp -i "${jhu_atlas}" \
                      -r ${jhu_dir}/${moving_image} \
                      -w "${jhu_reg_dir}"/JHU_FA_2mm_to_${moving_image}_nonlinear_cout_warpfields \
                      -o "${jhu_reg_dir}"/JHU_FA_2mm-diff_space_nonlinear

# Apply warp to DTI scalar metric images
function apply_new_warp {
    in_img="$1"
    in_img_pref="$(basename "$in_img")"
    if [[ -n "$2" ]]; then
        intrpm="$2"
    else
        intrpm=spline   # default for me -- FSL default is trilinear!
    fi
    # echo "  ${in_img} w/ ${intrpm}..."
    [[ $(${FSLDIR}/bin/imtest "${prep_dir}"/"${in_img}") == 1 ]] || { echo "Error: ${prep_dir}/${in_img} not found in ${PWD}."; exit 2; }
    $FSLDIR/bin/applywarp -i "${prep_dir}"/"${in_img}" \
                          -r "${jhu_atlas}" \
                          -w "${jhu_reg_dir}"/${moving_image}_to_JHU_FA_2mm_nonlinear_cout_warpfields \
                          --interp="${intrpm}" \
                          -o "${jhu_dir}"/"${in_img_pref}"-jhusp
}

echo "Applying warps..."
for img in wdt_FA wdt_L1 wdt_MD wdt_MO wdt_RD wdt_FrobNorm; do
    apply_new_warp "$img"
done


# Also apply warp to mask using nearest neighbour interp
mkdir -p "${prep_dir}"/qc
if [[ ! -e "${prep_dir}"/qc/rough_brainmask-ero.nii.gz ]]; then
    erode_mask "${prep_dir}"/rough_brainmask.nii.gz 7.5 2   # erode mask 2 times with 7.5 mm box
    /bin/mv "${prep_dir}"/rough_brainmask-ero.nii.gz "${prep_dir}"/qc/
fi

for img in rough_brainmask qc/rough_brainmask-ero; do
    apply_new_warp "$img" nn
done

# clean up mask edges
for img in rough_brainmask rough_brainmask-ero; do
    fslmaths "${jhu_dir}"/"${img}"-jhusp -kernel box 7.5 -ero -dilD "${jhu_dir}"/"${img}"-jhusp
done

# apply mask to std space images to save space
echo "Applying mask..."
for img in wdt_FA wdt_L1 wdt_MD wdt_MO wdt_RD wdt_FrobNorm; do
    fslmaths "${jhu_dir}"/"$img"-jhusp -mul "${jhu_dir}"/rough_brainmask-jhusp "${jhu_dir}"/"$img"-jhusp
done

